import{_ as t,c as p,a,b as l,d as s,e as i,f as o,r as c,o as u}from"./app-Dt8Q2BcN.js";const r={};function d(k,n){const e=c("RouteLink");return u(),p("div",null,[n[3]||(n[3]=a(`<h1 id="提现" tabindex="-1"><a class="header-anchor" href="#提现"><span>提现</span></a></h1><p>在本节一个非常重要的概念 —— 提现</p><p>当我们部署的智能合约接受到调用方支付的以太之后，</p><p>非常关键的一件事情，我们该如何将以太提现到自己的账户呢？</p><p>废话少说，直接上代码：</p><div class="language-solidity line-numbers-mode" data-highlighter="prismjs" data-ext="solidity" data-title="solidity"><pre><code><span class="line"><span class="token keyword">function</span> <span class="token function">withdraw</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token comment">// 判断调用方是否合约为所有者</span></span>
<span class="line">	<span class="token keyword">require</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender <span class="token operator">==</span> owner<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">// 将余额转给合约所有者</span></span>
<span class="line">	owner<span class="token punctuation">.</span><span class="token function">transfer</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>balance<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们可以使用transfer向任何以太坊地址付钱，</p><p>所以我们也可以在调用方超额付款的时候给他们退钱，</p>`,8)),l("p",null,[n[1]||(n[1]=s("让我们强化下")),i(e,{to:"/payable.html"},{default:o(()=>n[0]||(n[0]=[s("可提现")])),_:1}),n[2]||(n[2]=s("中的代码："))]),n[4]||(n[4]=a(`<div class="language-solidity line-numbers-mode" data-highlighter="prismjs" data-ext="solidity" data-title="solidity"><pre><code><span class="line"><span class="token keyword">function</span> <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token keyword">payable</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 检查调用方是否支付0.001以太</span></span>
<span class="line">  <span class="token keyword">require</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>value <span class="token operator">&gt;=</span> <span class="token number">0.001</span> ether<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// 将超额付款退回</span></span>
<span class="line">  msg<span class="token punctuation">.</span>sender<span class="token punctuation">.</span><span class="token function">transfer</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>value <span class="token operator">-</span> <span class="token number">0.001</span> ether<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// 如果已支付，则运行函数逻辑</span></span>
<span class="line">  <span class="token keyword">do</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1))])}const v=t(r,[["render",d],["__file","withdrawal.html.vue"]]),h=JSON.parse('{"path":"/withdrawal.html","title":"提现","lang":"zh-CN","frontmatter":{},"headers":[],"git":{"updatedTime":1734842645000,"contributors":[{"name":"Ethan S. Chen","username":"Ethan S. Chen","email":"ethanschen@163.com","commits":1,"url":"https://github.com/Ethan S. Chen"}]},"filePathRelative":"withdrawal.md"}');export{v as comp,h as data};
